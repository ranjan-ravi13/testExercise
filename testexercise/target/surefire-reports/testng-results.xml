<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="4" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-08-26T16:39:25 CEST" name="Surefire suite" finished-at="2020-08-26T16:40:12 CEST" duration-ms="46471">
    <groups>
    </groups>
    <test started-at="2020-08-26T16:39:25 CEST" name="Surefire test" finished-at="2020-08-26T16:40:12 CEST" duration-ms="46471">
      <class name="com.ppro.qatest.tests.PaymentPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:25 CEST" name="setUp" finished-at="2020-08-26T16:39:32 CEST" duration-ms="6424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="PaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:32 CEST" name="PaymentTest" data-provider="getData" finished-at="2020-08-26T16:39:32 CEST" duration-ms="396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[555]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EUR]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Transaction Succeded]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaymentTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:32 CEST" name="tearDown" finished-at="2020-08-26T16:39:33 CEST" duration-ms="654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:33 CEST" name="setUp" finished-at="2020-08-26T16:39:41 CEST" duration-ms="7820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="PaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:41 CEST" name="PaymentTest" data-provider="getData" finished-at="2020-08-26T16:39:41 CEST" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[AUD]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Transaction Failed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaymentTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:41 CEST" name="tearDown" finished-at="2020-08-26T16:39:42 CEST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:42 CEST" name="setUp" finished-at="2020-08-26T16:39:48 CEST" duration-ms="5870" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="PaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:48 CEST" name="PaymentTest" data-provider="getData" finished-at="2020-08-26T16:39:48 CEST" duration-ms="327" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[AUD]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Australia]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Transaction Succeded]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Transaction Succeded] but found [Transaction Failed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Transaction Succeded] but found [Transaction Failed]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.ppro.qatest.tests.PaymentPageTest.PaymentTest(PaymentPageTest.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaymentTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:48 CEST" name="tearDown" finished-at="2020-08-26T16:39:49 CEST" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:49 CEST" name="setUp" finished-at="2020-08-26T16:39:55 CEST" duration-ms="6564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="PaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:55 CEST" name="PaymentTest" data-provider="getData" finished-at="2020-08-26T16:39:55 CEST" duration-ms="321" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SGD]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Singapore]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Transaction Succeded]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Transaction Succeded] but found [Transaction Failed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Transaction Succeded] but found [Transaction Failed]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.ppro.qatest.tests.PaymentPageTest.PaymentTest(PaymentPageTest.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaymentTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:55 CEST" name="tearDown" finished-at="2020-08-26T16:39:56 CEST" duration-ms="829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:39:56 CEST" name="setUp" finished-at="2020-08-26T16:40:03 CEST" duration-ms="6642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="PaymentPageHeaderTest()[pri:1, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:40:03 CEST" name="PaymentPageHeaderTest" finished-at="2020-08-26T16:40:03 CEST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaymentPageHeaderTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:40:03 CEST" name="tearDown" finished-at="2020-08-26T16:40:04 CEST" duration-ms="635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:40:04 CEST" name="setUp" finished-at="2020-08-26T16:40:11 CEST" duration-ms="7315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="sucessPayTest()[pri:2, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:40:11 CEST" name="sucessPayTest" finished-at="2020-08-26T16:40:11 CEST" duration-ms="306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sucessPayTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ppro.qatest.tests.PaymentPageTest@2df32bf7]" started-at="2020-08-26T16:40:11 CEST" name="tearDown" finished-at="2020-08-26T16:40:12 CEST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.ppro.qatest.tests.PaymentPageTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
